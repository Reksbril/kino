<?php

include "repertoire_generators/constants.php";

function search_on_filmweb(string $movieName)
{
    $movieNameUrl = urlencode($movieName);
    // var_dump($movieNameUrl);

    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://www.filmweb.pl/api/v1/live/search?query=' . $movieNameUrl . '&pageSize=12');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');

    $headers = array();
    $headers[] = 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:130.0) Gecko/20100101 Firefox/130.0';
    $headers[] = 'Accept: */*';
    $headers[] = 'Accept-Language: pl,en-US;q=0.7,en;q=0.3';
    $headers[] = 'Accept-Encoding: gzip, deflate, br, zstd';
    $headers[] = 'X-Locale: pl_PL';
    $headers[] = 'Sec-Fetch-Dest: empty';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Sec-Fetch-Site: same-origin';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);

    return $result;
}

function get_movie_id_and_title_from_filmweb(string $movieName)
{
    $searchResult = json_decode(search_on_filmweb($movieName));
    if ($searchResult == null) {
        return null;
    }
    foreach ($searchResult->{"searchHits"} as $searchHit) {
        if ($searchHit->{"type"} != "film" && $searchHit->{"type"} != "serial") {
            continue;
        }

        $matchedTitle = $searchHit->{"matchedTitle"};

        if (
            str_contains(mb_strtolower($movieName, "UTF-8"), mb_strtolower($matchedTitle, "UTF-8")) ||
            str_contains(mb_strtolower($matchedTitle, "UTF-8"), mb_strtolower($movieName, "UTF-8"))
        ) {
            return array($searchHit->{"id"}, $searchHit->{"matchedTitle"});
        }
    }
    return null;
}

function get_webpage_by_id(int $id)
{
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://www.filmweb.pl/film/a-1-' . $id);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);

    $headers = array();
    $headers[] = 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:130.0) Gecko/20100101 Firefox/130.0';
    $headers[] = 'Accept: */*';
    $headers[] = 'Accept-Language: pl,en-US;q=0.7,en;q=0.3';
    $headers[] = 'Accept-Encoding: gzip, deflate, br, zstd';
    $headers[] = 'X-Locale: pl_PL';
    $headers[] = 'Sec-Fetch-Dest: empty';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Sec-Fetch-Site: same-origin';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);

    return $result;
}

function get_image_from_url($url)
{
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
    curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);

    $headers = array();
    $headers[] = 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:130.0) Gecko/20100101 Firefox/130.0';
    $headers[] = 'Accept: */*';
    $headers[] = 'Accept-Language: pl,en-US;q=0.7,en;q=0.3';
    $headers[] = 'Accept-Encoding: gzip, deflate, br, zstd';
    $headers[] = 'X-Locale: pl_PL';
    $headers[] = 'Sec-Fetch-Dest: empty';
    $headers[] = 'Sec-Fetch-Mode: cors';
    $headers[] = 'Sec-Fetch-Site: same-origin';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);

    return $result;
}

function get_poster_from_html($html)
{
    // Load the HTML into DOMDocument
    $dom = new DOMDocument;
    libxml_use_internal_errors(true); // Disable warnings for invalid HTML
    $html = mb_convert_encoding($html, 'HTML-ENTITIES', 'UTF-8');
    $dom->loadHTML($html);
    libxml_clear_errors();

    // Use DOMXPath to query the data
    $xpath = new DOMXPath($dom);

    $posterSection = $xpath->query('//img[@id="filmPoster"]');
    if ($posterSection->item(0) == null) {
        return null;
    }
    $posterLink = $posterSection->item(0)->getAttribute("src");

    return file_get_contents($posterLink);
}

function get_poster(string $movieName)
{
    global $POSTERS_DIR;

    if (!is_dir($POSTERS_DIR)) {
        mkdir($POSTERS_DIR);
    }

    $outputLocation = "$POSTERS_DIR/$movieName.jpg";
    if (file_exists($outputLocation)) {
        return;
    }

    $database = get_db();
    $movie = get_movie_by_original_name($movieName, $database);
    if ($movie == null) {
        $id_title = get_movie_id_and_title_from_filmweb($movieName);

        if ($id_title == null) {
            file_put_contents($outputLocation, '');
            return;
        }

        list($id, $title) = $id_title;

        add_movie(new Movie($movieName, $title, $id), $database);
    } else {
        $id = $movie->filmwebId;
    }

    $movieHtml = get_webpage_by_id($id);
    $imageData = get_poster_from_html($movieHtml);
    if ($imageData == null) {
        file_put_contents($outputLocation, '');
        return null;
    }

    file_put_contents($outputLocation, $imageData);
}

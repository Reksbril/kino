# Requirements
# - variables
#   - SSH_PRIVATE_KEY: content of the private key file
#   - SSH_USER: user to access the server
#   - SSH_HOST: IP of your server
#   - WORK_DIR: path to the directory containing the docker-compose.yml file
#   - PAT: the personal access token to login to the registry
# - docker-compose.yml exists on server in WORK_DIR

name: publish

on:
  push:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: reksbril/cinema-prod:latest

jobs:
    publish:
        name: publish image
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        - name: Login
          run: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u reksbril --password-stdin
        - name: Build and Publish
          run: |
            docker build . --tag ghcr.io/reksbril/cinema-prod:latest
            docker push ghcr.io/reksbril/cinema-prod:latest

    deploy:
        needs: publish
        name: deploy image
        runs-on: ubuntu-latest

        steps:
        - name: install ssh keys
          # check this thread to understand why its needed:
          # <https://stackoverflow.com/a/70447517>
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and docker login
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo ${{ secrets.PAT }} | docker login ghcr.io -u reksbril --password-stdin && exit"
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
        - name: cleanup
          run: rm -rf ~/.ssh